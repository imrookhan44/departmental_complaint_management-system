(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72942],{139460:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return je}});var t,o,i=a(827378),s=a(494616),r=a(295649),l=a(290763),c=a(375205),d=a(709497),p=a(197704),m=a(824246),u=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var h=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var g,x,f,y,b,v,k=a(25778),G=a(165262),w=a(828996),C=a(394898),j=a(85275),I=a(503170),Z=a(823168);var S=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var P,R,A,T,B,F,M,L,W,z,D,H,N,$,q,_,O,E,V,K,Y=a(379002),J=a.n(Y),U=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(2),textAlign:"center",color:n.palette.text.secondary})}));var X,Q=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var ee=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var ne,ae,te,oe,ie,se=a(376811),re=a(161980),le=(0,l.ZP)("img")({margin:"auto",display:"block",maxWidth:"100%",maxHeight:"100%"});var ce,de=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));function pe(){return oe||(oe=(0,m.jsxs)(i.Fragment,{children:[(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(de,{children:"Item"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(de,{children:"Item"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(de,{children:"Item"})})]}))}var me=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var ue,he,ge,xe,fe=a(84408),ye=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(2),maxWidth:400,color:n.palette.text.primary})})),be="Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. ";var ve=(0,l.ZP)(d.Z)((function(e){var n=e.theme;return(0,r.Z)((0,r.Z)({backgroundColor:"dark"===n.palette.mode?"#1A2027":"#fff"},n.typography.body2),{},{padding:n.spacing(1),textAlign:"center",color:n.palette.text.secondary})}));var ke,Ge={en:{description:"The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.",location:"/docs/data/material/components/grid/grid.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid</h1><p class="description">The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.</p>\n\n<p>The <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">grid</a> creates visual consistency between layouts while allowing flexibility across a wide variety of designs.\nMaterial Design&#39;s responsive UI is based on a 12-column grid layout.</p>\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},'<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0\ufe0f The <code>Grid</code> component shouldn&#39;t be confused with a data grid; it is closer to a layout grid. For a data grid head to <a href="/x/react-data-grid/">the <code>DataGrid</code> component</a>.</p>\n\n</aside><h2 id="how-it-works">How it works<a aria-labelledby="how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The grid system is implemented with the <code>Grid</code> component:</p>\n<ul>\n<li>It uses <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">CSS&#39;s Flexible Box module</a> for high flexibility.</li>\n<li>There are two types of layout: <em>containers</em> and <em>items</em>.</li>\n<li>Item widths are set in percentages, so they&#39;re always fluid and sized relative to their parent element.</li>\n<li>Items have padding to create the spacing between individual items.</li>\n<li>There are five grid breakpoints: xs, sm, md, lg, and xl.</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the <a href="/material-ui/customization/breakpoints/#default-breakpoints">breakpoint constraints</a>.</li>\n</ul>\n<p>If you are <strong>new to or unfamiliar with flexbox</strong>, we encourage you to read this <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a> guide.</p>\n<h2 id="fluid-grids">Fluid grids<a aria-labelledby="fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Fluid grids use columns that scale and resize content. A fluid grid&#39;s layout can use breakpoints to determine if the layout needs to change dramatically.</p>\n<h3 id="basic-grid">Basic grid<a aria-labelledby="basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Column widths are integer values between 1 and 12; they apply at any breakpoint and indicate how many columns are occupied by the component.</p>\n<p>A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size.</p>\n',{demo:"BasicGrid.js",bg:!0},'<h3 id="grid-with-multiple-breakpoints">Grid with multiple breakpoints<a aria-labelledby="grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints.</p>\n<p>For example, <code>xs={12} sm={6}</code> sizes a component to occupy half of the viewport width (6 columns) when viewport width is <a href="/material-ui/customization/breakpoints/#default-breakpoints">600 or more pixels</a>. For smaller viewports, the component fills all 12 available columns.</p>\n',{demo:"FullWidthGrid.js",bg:!0},'<h2 id="spacing">Spacing<a aria-labelledby="spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop.\nThe spacing value can be any positive number, including decimals and any string.\nThe prop is converted into a CSS property using the <a href="/material-ui/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"SpacingGrid.js",bg:!0},'<h3 id="row-amp-column-spacing">Row &amp; column spacing<a aria-labelledby="row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>rowSpacing</code> and <code>columnSpacing</code> props allow for specifying the row and column gaps independently.\nIt&#39;s similar to the <code>row-gap</code> and <code>column-gap</code> properties of <a href="/system/grid/#row-gap-amp-column-gap">CSS Grid</a>.</p>\n',{demo:"RowAndColumnSpacing.js",bg:!0},'<h2 id="responsive-values">Responsive values<a aria-labelledby="responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint.\nFor instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"ResponsiveGrid.js",bg:!0},'<p>Responsive values is supported by:</p>\n<ul>\n<li><code>columns</code></li>\n<li><code>columnSpacing</code></li>\n<li><code>direction</code></li>\n<li><code>rowSpacing</code></li>\n<li><code>spacing</code></li>\n<li>all the <a href="#system-props">other props</a> of the system</li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint.\nFor instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n\n</aside><h2 id="interactive">Interactive<a aria-labelledby="interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Below is an interactive demo that lets you explore the visual results of the different settings:</p>\n',{demo:"InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="auto-layout">Auto-layout<a aria-labelledby="auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Auto-layout makes the <em>items</em> equitably share the available space.\nThat also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"AutoGrid.js",bg:!0},'<h3 id="variable-width-content">Variable width content<a aria-labelledby="variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Set one of the size breakpoint props to <code>&quot;auto&quot;</code> instead of <code>true</code> / a <code>number</code> to size\na column based on the natural width of its content.</p>\n',{demo:"VariableWidthGrid.js",bg:!0},'<h2 id="complex-grid">Complex Grid<a aria-labelledby="complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"ComplexGrid.js",bg:!0},'<h2 id="nested-grid">Nested Grid<a aria-labelledby="nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<aside class="MuiCallout-root MuiCallout-info"><p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n\n</aside><p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="columns">Columns<a aria-labelledby="columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"ColumnsGrid.js",bg:!0},'<h2 id="limitations">Limitations<a aria-labelledby="limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="negative-margin">Negative margin<a aria-labelledby="negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="white-space-nowrap">white-space: nowrap<a aria-labelledby="white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The initial setting on flex items is <code>min-width: auto</code>.\nIt&#39;s causing a positioning conflict when the children is using <code>white-space: nowrap;</code>.\nYou can experience the issue with:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>In order for the item to stay within the container you need to set <code>min-width: 0</code>.\nIn practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"AutoGridNoWrap.js",bg:!0},'<h3 id="direction-column-column-reverse">direction: column | column-reverse<a aria-labelledby="direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers.\nIf used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="css-grid-layout">CSS Grid Layout<a aria-labelledby="css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally.\nBut as seen below, you can easily use <a href="/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"CSSGrid.js",bg:!0},'<h2 id="system-props">System props<a aria-labelledby="system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component.\nFor instance, a padding:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/material-ui/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"How it works",level:2,hash:"how-it-works",children:[]},{text:"Fluid grids",level:2,hash:"fluid-grids",children:[{text:"Basic grid",level:3,hash:"basic-grid"},{text:"Grid with multiple breakpoints",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Spacing",level:2,hash:"spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"row-amp-column-spacing"}]},{text:"Responsive values",level:2,hash:"responsive-values",children:[]},{text:"Interactive",level:2,hash:"interactive",children:[]},{text:"Auto-layout",level:2,hash:"auto-layout",children:[{text:"Variable width content",level:3,hash:"variable-width-content"}]},{text:"Complex Grid",level:2,hash:"complex-grid",children:[]},{text:"Nested Grid",level:2,hash:"nested-grid",children:[]},{text:"Columns",level:2,hash:"columns",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"Negative margin",level:3,hash:"negative-margin"},{text:"white-space: nowrap",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"CSS Grid Layout",level:2,hash:"css-grid-layout",children:[]},{text:"System props",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Grid component",headers:{product:"material-ui",title:"React Grid component",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}},pt:{description:"O leiaute responsivo da grade do Material Design se adapta ao tamanho e orienta\xe7\xe3o da tela, garantindo a consist\xeancia entre leiautes.",location:"/docs/data/material/components/grid/grid-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid</h1><p class="description">O leiaute responsivo da grade do Material Design se adapta ao tamanho e orienta\xe7\xe3o da tela, garantindo a consist\xeancia entre leiautes.</p>\n\n<p>Uma <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">grade</a> cria consist\xeancia visual entre leiautes, enquanto permite flexibilidade em uma ampla variedade de projetos. A UI responsiva do Material Design \xe9 baseada em uma grade de 12 colunas.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0\ufe0f The <code>Grid</code> component shouldn&#39;t be confused with a data grid; it is closer to a layout grid. For a data grid head to <a href="/pt/x/react-data-grid/">the <code>DataGrid</code> component</a>.</p>\n\n</aside><h2 id="how-it-works">Como funciona<a aria-labelledby="how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The grid system is implemented with the <code>Grid</code> component:</p>\n<ul>\n<li>Ela usa <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">o m\xf3dulo CSS de box flex\xedvel</a> para alta flexibilidade.</li>\n<li>Existem dois tipos de leiautes: <em>cont\xeaineres</em> e <em>itens</em>.</li>\n<li>Larguras de itens s\xe3o definidas em porcentagens, desse modo s\xe3o sempre fluidas e dimensionadas de acordo os seus elementos pai.</li>\n<li>Itens t\xeam preenchimento para criar o espa\xe7amento entre itens individuais.</li>\n<li>Existem cinco pontos de quebra (breakpoints) na grade: xs, sm, md, lg e xl.</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the <a href="/pt/material-ui/customization/breakpoints/#default-breakpoints">breakpoint constraints</a>.</li>\n</ul>\n<p>If you are <strong>new to or unfamiliar with flexbox</strong>, we encourage you to read this <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a> guide.</p>\n<h2 id="fluid-grids">Grades flu\xeddas<a aria-labelledby="fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Fluid grids use columns that scale and resize content. A fluid grid&#39;s layout can use breakpoints to determine if the layout needs to change dramatically.</p>\n<h3 id="basic-grid">Grade b\xe1sica<a aria-labelledby="basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Column widths are integer values between 1 and 12; they apply at any breakpoint and indicate how many columns are occupied by the component.</p>\n<p>A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size.</p>\n',{demo:"BasicGrid.js",bg:!0},'<h3 id="grid-with-multiple-breakpoints">Grade com pontos de quebra<a aria-labelledby="grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints.</p>\n<p>For example, <code>xs={12} sm={6}</code> sizes a component to occupy half of the viewport width (6 columns) when viewport width is <a href="/pt/material-ui/customization/breakpoints/#default-breakpoints">600 or more pixels</a>. For smaller viewports, the component fills all 12 available columns.</p>\n',{demo:"FullWidthGrid.js",bg:!0},'<h2 id="spacing">Espa\xe7amento<a aria-labelledby="spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop. The spacing value can be any positive number, including decimals and any string. The prop is converted into a CSS property using the <a href="/pt/material-ui/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"SpacingGrid.js",bg:!0},'<h3 id="row-amp-column-spacing">Row &amp; column spacing<a aria-labelledby="row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>rowSpacing</code> and <code>columnSpacing</code> props allow for specifying the row and column gaps independently. It&#39;s similar to the <code>row-gap</code> and <code>column-gap</code> properties of <a href="/pt/system/grid/#row-gap-amp-column-gap">CSS Grid</a>.</p>\n',{demo:"RowAndColumnSpacing.js",bg:!0},'<h2 id="responsive-values">Valores responsivos<a aria-labelledby="responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint. For instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"ResponsiveGrid.js",bg:!0},'<p>Responsive values is supported by:</p>\n<ul>\n<li><code>colunas</code></li>\n<li><code>espa\xe7oDeColuna</code></li>\n<li><code>dire\xe7\xe3o</code></li>\n<li><code>espa\xe7oDeLinha</code></li>\n<li><code>spacing</code></li>\n<li>todas as outras propriedades do sistema <a href="#system-props">other props</a></li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint. For instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n\n</aside><h2 id="interactive">Interativo<a aria-labelledby="interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Below is an interactive demo that lets you explore the visual results of the different settings:</p>\n',{demo:"InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="auto-layout">Leiaute Autom\xe1tico<a aria-labelledby="auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Auto-layout makes the <em>items</em> equitably share the available space. That also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"AutoGrid.js",bg:!0},'<h3 id="variable-width-content">Margem negativa<a aria-labelledby="variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Set one of the size breakpoint props to <code>&quot;auto&quot;</code> instead of <code>true</code> / a <code>number</code> to size a column based on the natural width of its content.</p>\n',{demo:"VariableWidthGrid.js",bg:!0},'<h2 id="complex-grid">Grade Complexa<a aria-labelledby="complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"ComplexGrid.js",bg:!0},'<h2 id="nested-grid">Grade Aninhada<a aria-labelledby="nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<aside class="MuiCallout-root MuiCallout-info"><p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n\n</aside><p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="columns">Colunas<a aria-labelledby="columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"ColumnsGrid.js",bg:!0},'<h2 id="limitations">Limita\xe7\xf5es<a aria-labelledby="limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="negative-margin">Margem negativa<a aria-labelledby="negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="white-space-nowrap">white-space: nowrap;<a aria-labelledby="white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The initial setting on flex items is <code>min-width: auto</code>. It&#39;s causing a positioning conflict when the children is using <code>white-space: nowrap;</code>. You can experience the issue with:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>In order for the item to stay within the container you need to set <code>min-width: 0</code>. In practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"AutoGridNoWrap.js",bg:!0},'<h3 id="direction-column-column-reverse">direction: column | column-reverse<a aria-labelledby="direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers. If used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="css-grid-layout">Leiaute de Grade CSS<a aria-labelledby="css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally. But as seen below, you can easily use <a href="/pt/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"CSSGrid.js",bg:!0},'<h2 id="system-props">System props<a aria-labelledby="system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/pt/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component. For instance, a padding:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/material-ui/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Como funciona",level:2,hash:"how-it-works",children:[]},{text:"Grades flu\xeddas",level:2,hash:"fluid-grids",children:[{text:"Grade b\xe1sica",level:3,hash:"basic-grid"},{text:"Grade com pontos de quebra",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Espa\xe7amento",level:2,hash:"spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"row-amp-column-spacing"}]},{text:"Valores responsivos",level:2,hash:"responsive-values",children:[]},{text:"Interativo",level:2,hash:"interactive",children:[]},{text:"Leiaute Autom\xe1tico",level:2,hash:"auto-layout",children:[{text:"Margem negativa",level:3,hash:"variable-width-content"}]},{text:"Grade Complexa",level:2,hash:"complex-grid",children:[]},{text:"Grade Aninhada",level:2,hash:"nested-grid",children:[]},{text:"Colunas",level:2,hash:"columns",children:[]},{text:"Limita\xe7\xf5es",level:2,hash:"limitations",children:[{text:"Margem negativa",level:3,hash:"negative-margin"},{text:"white-space: nowrap;",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"Leiaute de Grade CSS",level:2,hash:"css-grid-layout",children:[]},{text:"System props",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Componente React Grade",headers:{product:"material-ui",title:"Componente React Grade",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}},zh:{description:"Material Design \u54cd\u5e94\u5f0f\u5e03\u5c40\u7684\u6805\u683c\u53ef\u9002\u5e94\u5c4f\u5e55\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u5e03\u5c40\u5728\u4e0d\u540c\u5c3a\u5bf8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002",location:"/docs/data/material/components/grid/grid-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid \u6805\u683c</h1><p class="description">Material Design \u54cd\u5e94\u5f0f\u5e03\u5c40\u7684\u6805\u683c\u53ef\u9002\u5e94\u5c4f\u5e55\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u5e03\u5c40\u5728\u4e0d\u540c\u5c3a\u5bf8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002</p>\n\n<p><a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">Grid \u6805\u683c\u7ec4\u4ef6</a> \u80fd\u786e\u4fdd\u4e0d\u540c\u5e03\u5c40\u95f4\u7684\u89c6\u89c9\u5c42\u9762\u7684\u8212\u9002\u611f\uff0c\u540c\u65f6\u5728\u4f17\u591a\u4e0d\u540c\u8bbe\u8ba1\u4e2d\u4fdd\u6301\u7075\u6d3b\u6027\u3002 Material Design \u57fa\u4e8e 12 \u5217\u7684\u7f51\u683c\u5e03\u5c40\u6765\u505a\u5230 UI \u7684\u54cd\u5e94\u5f0f\u3002</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<p>\u8b66\u544a\uff0c\u4e0d\u5e94\u5c06<code>Grid</code>\u4e0edata grid\u76f8\u4e92\u6df7\u6dc6\uff0c\u90a3\u662f\u4e00\u4e2a\u548c\u5e03\u5c40\u7f51\u683c\u76f8\u540c\u7684\u7f51\u683c For a data grid head to <a href="/zh/x/react-data-grid/">the <code>DataGrid</code> component</a>.</p>\n<aside class="MuiCallout-root MuiCallout-"><h2 id="how-it-works">\u5de5\u4f5c\u539f\u7406<a aria-labelledby="how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u7f51\u683c\u7cfb\u7edf\u662f\u5bf9<code>Grid</code>\u7684\u5b9e\u73b0</p>\n<ul>\n<li>\u5b83\u4f7f\u7528 <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">CSS \u5f39\u6027\u76d2\u5b50\u6a21\u5757</a> \u6765\u505a\u5230\u9ad8\u5ea6\u7075\u6d3b\u3002</li>\n<li>\u5b83\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5e03\u5c40\uff1a <em>containers</em> \uff0c _items_\u3002</li>\n<li>\u6bcf\u9879\u7684\u5bbd\u5ea6\u662f\u6309\u767e\u5206\u6bd4\u8bbe\u7f6e\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u5927\u5c0f\u603b\u662f\u76f8\u5bf9\u4e8e\u5b83\u4eec\u7684\u7236\u5143\u7d20\u6d41\u52a8\u3002</li>\n<li>\u5b50\u9879\u76ee\uff08items\uff09\u4f7f\u7528\u5185\u8fb9\u8ddd\u6765\u4fdd\u6301\u548c\u5176\u4ed6\u5757\uff08items\uff09\u7684\u95f4\u8ddd\u3002</li>\n<li>\u5176\u4e2d\u4e94\u4e2a\u65ad\u70b9\u53ef\u4f9b\u4f7f\u7528\uff1axs\uff0csm\uff0cmd\uff0clg \u548c xl\u3002</li>\n<li>\u7ed9\u6bcf\u4e2a\u65ad\u70b9\u8d4b\u4e88\u7684\u6574\u578b\u503c\u90fd\u4ee3\u8868\u4e86\u5f53\u89c6\u56fe\u5bbd\u5ea6\u53ef\u4ee5\u6ee1\u8db3\u65ad\u70b9\u7ea6\u675f\u65f6\u7ec4\u4ef6\u91cc\u5360\u7528\u4e8612\u4e2a\u53ef\u7528\u5217\u91cc\u7684\u51e0\u4e2a</li>\n</ul>\n<p>\u5982\u679c\u4f60\u4e0d\u719f\u6089flexbox\uff0c\u6211\u4eec\u5efa\u8bae\u4f60\u53c2\u8003 <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a>\u7bc7</p>\n<h2 id="fluid-grids">Fluid grids \u6d41\u5f0f\u7f51\u683c<a aria-labelledby="fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6d41\u5f0f\u7f51\u683c\u53ef\u4ee5\u901a\u8fc7\u5217\uff08column\uff09\u6765\u7f29\u653e\u548c\u8c03\u6574\u5185\u5bb9\u7684\u5927\u5c0f\u3002 \u6d41\u5f0f\u7f51\u683c\u53ef\u4ee5\u7528\u65ad\u70b9\u6765\u51b3\u5b9a\u5e03\u5c40\u662f\u5426\u9700\u8981\u5927\u5e45\u5ea6\u53d8\u5316</p>\n<h3 id="basic-grid">\u57fa\u672c\u6805\u683c<a aria-labelledby="basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5217\u5bbd\u662f\u4e00\u4e2a\u57fa\u4e8e1-12\u7684\u6574\u578b\u503c\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7528\u4e8e\u4efb\u610f\u65ad\u70b9\u6765\u4ee3\u8868\u7ec4\u4ef6\u5360\u7528\u4e86\u591a\u5c11\u5217</p>\n<p>\u7ed9\u5b9a\u65ad\u70b9\u9002\u7528\u4e8e\u5176\u5b83\u6bd4\u5b83\u66f4\u5927\u7684\u65ad\u70b9\uff08\u9664\u975e\u91cd\u5199\uff0c\u4f60\u4f1a\u5c06\u5728\u672c\u9875\u7684\u540e\u9762\u770b\u5230\uff09 \u4e3e\u4e2a\u4f8b\u5b50\uff0c<code>xs={12}</code>\u4f1a\u5728\u65e0\u8bba\u4ed6\u81ea\u5df1\u5927\u5c0f\u6709\u591a\u5927\u7684\u60c5\u51b5\u4e0b\u5c06\u7ec4\u4ef6\u7684\u5bbd\u5ea6\u8c03\u6574\u4e3a\u5360\u636e\u6574\u4e2a\u89c6\u56fe\u5bbd\u5ea6</p>\n\n</aside>',{demo:"BasicGrid.js",bg:!0},'<h3 id="grid-with-multiple-breakpoints">\u6709\u65ad\u70b9\u7684\u6805\u683c<a aria-labelledby="grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u7ec4\u4ef6\u53ef\u80fd\u6709\u591a\u4e2a\u5bbd\u5ea6\u5b9a\u4e49\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7ec4\u4ef6\u6839\u636e\u6307\u5b9a\u7684\u65ad\u70b9\u5927\u5c0f\u6765\u5e03\u5c40 \u5927\u7684\u65ad\u70b9\u7684\u5bbd\u5ea6\u503c\u4f1a\u8986\u76d6\u5c0f\u7684\u65ad\u70b9\u7684\u5bbd\u5ea6\u503c</p>\n<p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c<code>xs={12} sm={6}</code>\u4f1a\u5728\u89c6\u56fe\u5bbd\u5ea6\u4e3a <a href="/zh/material-ui/customization/breakpoints/#default-breakpoints">\u7684\u65f6\u5019\u8ba9\u7ec4\u4ef6\u5360\u636e\u89c6\u56fe\u4e00\u534a\u7684\u5bbd\u5ea6\uff086\u5217\uff09</a> \u5bf9\u4e8e\u8f83\u5c0f\u7684\u89c6\u56fe\u5bbd\u5ea6\uff0c\u5219\u4f1a\u5360\u636e\u6240\u6709\u768412\u5217</p>\n',{demo:"FullWidthGrid.js",bg:!0},'<h2 id="spacing">Spacing \u95f4\u8ddd<a aria-labelledby="spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u63a7\u5236\u5b50\u63a7\u4ef6\u4e4b\u95f4\u7684\u95f4\u8ddd\uff0c\u53ef\u4ee5\u4f7f\u7528<code>spacing</code>\u5c5e\u6027 Spacing\u53ef\u4ee5\u662f\u5305\u542b\u5c0f\u6570\u548c\u6574\u578b\u503c\u8fd8\u6709\u5b57\u7b26\u4e32\u7684\u4efb\u610f\u5927\u4e8e0\u7684\u6570 \u5c5e\u6027\u503c\u4f1a\u4f7f\u7528<a href="/zh/material-ui/customization/spacing/"><code>theme.spacing()</code></a>\u52a9\u624b\u6765\u8f6c\u6362\u6210css\u5c5e\u6027</p>\n',{demo:"SpacingGrid.js",bg:!0},'<h3 id="row-amp-column-spacing">\u884c\u3001\u5217\u95f4\u8ddd<a aria-labelledby="row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>rowSpacing</code>\u548c<code>columnSpacing</code>\u5c5e\u6027\u5141\u8bb8\u4f60\u72ec\u7acb\u6307\u5b9a\u5217\u95f4\u8ddd\u548c\u884c\u95f4\u8ddd \u4ed6\u548c<a href="/zh/system/grid/#row-gap-amp-column-gap">CSS Grid</a>\u91cc\u7684<code>row-gap</code>\u8fd8\u6709 <code>column-gap</code>\u5c5e\u6027\u76f8\u540c</p>\n',{demo:"RowAndColumnSpacing.js",bg:!0},'<h2 id="responsive-values">\u54cd\u5e94\u5f0f\u7684\u503c<a aria-labelledby="responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint. For instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"ResponsiveGrid.js",bg:!0},'<p>Responsive values is supported by:</p>\n<ul>\n<li><code>columns</code></li>\n<li><code>columnSpacing</code></li>\n<li><code>direction</code></li>\n<li><code>rowSpacing</code></li>\n<li><code>spacing</code></li>\n<li>\u7cfb\u7edf\u4e2d\u7684\u6240\u6709<a href="#system-props">\u5176\u5b83\u5c5e\u6027</a></li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint. For instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n\n</aside><h2 id="interactive">\u4ea4\u4e92\u5f0f<a aria-labelledby="interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Below is an interactive demo that lets you explore the visual results of the different settings:</p>\n',{demo:"InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="auto-layout">\u81ea\u9002\u5e94\u5e03\u5c40<a aria-labelledby="auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Auto-layout makes the <em>items</em> equitably share the available space. That also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"AutoGrid.js",bg:!0},'<h3 id="variable-width-content">\u8d1f\u8fb9\u8ddd<a aria-labelledby="variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Set one of the size breakpoint props to <code>&quot;auto&quot;</code> instead of <code>true</code> / a <code>number</code> to size a column based on the natural width of its content.</p>\n',{demo:"VariableWidthGrid.js",bg:!0},'<h2 id="complex-grid">\u590d\u6742\u7684\u6805\u683c<a aria-labelledby="complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"ComplexGrid.js",bg:!0},'<h2 id="nested-grid">\u5d4c\u5957\u6805\u683c<a aria-labelledby="nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<aside class="MuiCallout-root MuiCallout-info"><p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n\n</aside><p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="columns">\u5217<a aria-labelledby="columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"ColumnsGrid.js",bg:!0},'<h2 id="limitations">\u8bbe\u8ba1\u5c40\u9650<a aria-labelledby="limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="negative-margin">\u8d1f\u8fb9\u8ddd<a aria-labelledby="negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="white-space-nowrap">white-space: nowrap;<a aria-labelledby="white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The initial setting on flex items is <code>min-width: auto</code>. It&#39;s causing a positioning conflict when the children is using <code>white-space: nowrap;</code>. You can experience the issue with:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>In order for the item to stay within the container you need to set <code>min-width: 0</code>. In practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"AutoGridNoWrap.js",bg:!0},'<h3 id="direction-column-column-reverse">direction: column | column-reverse<a aria-labelledby="direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers. If used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="css-grid-layout">CSS \u6805\u683c\u5e03\u5c40<a aria-labelledby="css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally. But as seen below, you can easily use <a href="/zh/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"CSSGrid.js",bg:!0},'<h2 id="system-props">\u7cfb\u7edf\u5c5e\u6027<a aria-labelledby="system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/zh/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component. For instance, a padding:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n','<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/material-ui/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"\u5de5\u4f5c\u539f\u7406",level:2,hash:"how-it-works",children:[]},{text:"Fluid grids \u6d41\u5f0f\u7f51\u683c",level:2,hash:"fluid-grids",children:[{text:"\u57fa\u672c\u6805\u683c",level:3,hash:"basic-grid"},{text:"\u6709\u65ad\u70b9\u7684\u6805\u683c",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Spacing \u95f4\u8ddd",level:2,hash:"spacing",children:[{text:"\u884c\u3001\u5217\u95f4\u8ddd",level:3,hash:"row-amp-column-spacing"}]},{text:"\u54cd\u5e94\u5f0f\u7684\u503c",level:2,hash:"responsive-values",children:[]},{text:"\u4ea4\u4e92\u5f0f",level:2,hash:"interactive",children:[]},{text:"\u81ea\u9002\u5e94\u5e03\u5c40",level:2,hash:"auto-layout",children:[{text:"\u8d1f\u8fb9\u8ddd",level:3,hash:"variable-width-content"}]},{text:"\u590d\u6742\u7684\u6805\u683c",level:2,hash:"complex-grid",children:[]},{text:"\u5d4c\u5957\u6805\u683c",level:2,hash:"nested-grid",children:[]},{text:"\u5217",level:2,hash:"columns",children:[]},{text:"\u8bbe\u8ba1\u5c40\u9650",level:2,hash:"limitations",children:[{text:"\u8d1f\u8fb9\u8ddd",level:3,hash:"negative-margin"},{text:"white-space: nowrap;",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"CSS \u6805\u683c\u5e03\u5c40",level:2,hash:"css-grid-layout",children:[]},{text:"\u7cfb\u7edf\u5c5e\u6027",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Grid\uff08\u6805\u683c\uff09\u7ec4\u4ef6",headers:{product:"material-ui",title:"React Grid\uff08\u6805\u683c\uff09\u7ec4\u4ef6",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}}},we={"BasicGrid.js":{module:"./BasicGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function BasicGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2}>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n  <Grid item xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid item xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./BasicGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function BasicGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"FullWidthGrid.js":{module:"./FullWidthGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function FullWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2}>\n  <Grid item xs={6} md={8}>\n    <Item>xs=6 md=8</Item>\n  </Grid>\n  <Grid item xs={6} md={4}>\n    <Item>xs=6 md=4</Item>\n  </Grid>\n  <Grid item xs={6} md={4}>\n    <Item>xs=6 md=4</Item>\n  </Grid>\n  <Grid item xs={6} md={8}>\n    <Item>xs=6 md=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./FullWidthGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function FullWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"SpacingGrid.js":{module:"./SpacingGrid.js",raw:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport HighlightedCode from 'docs/src/modules/components/HighlightedCode';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport Paper from '@mui/material/Paper';\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n\n  const handleChange = (event) => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const jsx = `\n<Grid container spacing={${spacing}}>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={spacing}>\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  height: 140,\n                  width: 100,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n                }}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container>\n            <Grid item>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">spacing</FormLabel>\n                <RadioGroup\n                  name=\"spacing\"\n                  aria-label=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChange}\n                  row\n                >\n                  {[0, 0.5, 1, 2, 3, 4, 8, 12].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      control={<Radio />}\n                      label={value.toString()}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n        <HighlightedCode code={jsx} language=\"jsx\" />\n      </Grid>\n    </Grid>\n  );\n}\n",moduleTS:"./SpacingGrid.js",rawTS:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport HighlightedCode from 'docs/src/modules/components/HighlightedCode';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport Paper from '@mui/material/Paper';\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSpacing(Number((event.target as HTMLInputElement).value));\n  };\n\n  const jsx = `\n<Grid container spacing={${spacing}}>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={spacing}>\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  height: 140,\n                  width: 100,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n                }}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container>\n            <Grid item>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">spacing</FormLabel>\n                <RadioGroup\n                  name=\"spacing\"\n                  aria-label=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChange}\n                  row\n                >\n                  {[0, 0.5, 1, 2, 3, 4, 8, 12].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      control={<Radio />}\n                      label={value.toString()}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n        <HighlightedCode code={jsx} language=\"jsx\" />\n      </Grid>\n    </Grid>\n  );\n}\n"},"RowAndColumnSpacing.js":{module:"./RowAndColumnSpacing.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function RowAndColumnSpacing() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          <Item>1</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>2</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>3</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>4</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n  <Grid item xs={6}>\n    <Item>1</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>2</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>3</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>4</Item>\n  </Grid>\n</Grid>",moduleTS:"./RowAndColumnSpacing.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function RowAndColumnSpacing() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          <Item>1</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>2</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>3</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>4</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"ResponsiveGrid.js":{module:"./ResponsiveGrid.js",raw:"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ResponsiveGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {Array.from(Array(6)).map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <Item>xs=2</Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n  {Array.from(Array(6)).map((_, index) => (\n    <Grid item xs={2} sm={4} md={4} key={index}>\n      <Item>xs=2</Item>\n    </Grid>\n  ))}\n</Grid>",moduleTS:"./ResponsiveGrid.js",rawTS:"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ResponsiveGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {Array.from(Array(6)).map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <Item>xs=2</Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n"},"InteractiveGrid.js":{module:"./InteractiveGrid.js",raw:'import * as React from \'react\';\nimport Grid from \'@mui/material/Grid\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport Radio from \'@mui/material/Radio\';\nimport Paper from \'@mui/material/Paper\';\nimport HighlightedCode from \'docs/src/modules/components/HighlightedCode\';\n\nexport default function InteractiveGrid() {\n  const [direction, setDirection] = React.useState(\'row\');\n  const [justifyContent, setJustifyContent] = React.useState(\'center\');\n  const [alignItems, setAlignItems] = React.useState(\'center\');\n\n  const jsx = `\n<Grid\n  container\n  direction="${direction}"\n  justifyContent="${justifyContent}"\n  alignItems="${alignItems}"\n>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container>\n      <Grid item xs={12}>\n        <Grid\n          sx={{ height: 300, pb: 2 }}\n          container\n          spacing={2}\n          alignItems={alignItems}\n          direction={direction}\n          justifyContent={justifyContent}\n        >\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \'dark\' ? \'#1A2027\' : \'#fff\',\n                  height: \'100%\',\n                  color: \'text.secondary\',\n                  pt: `${(value + 1) * 10}px`,\n                  pb: `${(value + 1) * 10}px`,\n                }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(event) => {\n                    setDirection(event.target.value);\n                  }}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel\n                    value="row-reverse"\n                    control={<Radio />}\n                    label="row-reverse"\n                  />\n                  <FormControlLabel\n                    value="column"\n                    control={<Radio />}\n                    label="column"\n                  />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">justifyContent</FormLabel>\n                <RadioGroup\n                  row\n                  name="justifyContent"\n                  aria-label="justifyContent"\n                  value={justifyContent}\n                  onChange={(event) => {\n                    setJustifyContent(event.target.value);\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel\n                    value="space-around"\n                    control={<Radio />}\n                    label="space-around"\n                  />\n                  <FormControlLabel\n                    value="space-evenly"\n                    control={<Radio />}\n                    label="space-evenly"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(event) => {\n                    setAlignItems(event.target.value);\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="stretch"\n                    control={<Radio />}\n                    label="stretch"\n                  />\n                  <FormControlLabel\n                    value="baseline"\n                    control={<Radio />}\n                    label="baseline"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <HighlightedCode code={jsx} language="jsx" />\n      </Grid>\n    </Grid>\n  );\n}\n',moduleTS:"./InteractiveGrid.js",rawTS:'import * as React from \'react\';\nimport Grid, { GridDirection } from \'@mui/material/Grid\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport Radio from \'@mui/material/Radio\';\nimport Paper from \'@mui/material/Paper\';\nimport HighlightedCode from \'docs/src/modules/components/HighlightedCode\';\n\ntype GridItemsAlignment =\n  | \'flex-start\'\n  | \'center\'\n  | \'flex-end\'\n  | \'stretch\'\n  | \'baseline\';\n\ntype GridJustification =\n  | \'flex-start\'\n  | \'center\'\n  | \'flex-end\'\n  | \'space-between\'\n  | \'space-around\'\n  | \'space-evenly\';\n\nexport default function InteractiveGrid() {\n  const [direction, setDirection] = React.useState<GridDirection>(\'row\');\n  const [justifyContent, setJustifyContent] =\n    React.useState<GridJustification>(\'center\');\n  const [alignItems, setAlignItems] = React.useState<GridItemsAlignment>(\'center\');\n\n  const jsx = `\n<Grid\n  container\n  direction="${direction}"\n  justifyContent="${justifyContent}"\n  alignItems="${alignItems}"\n>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container>\n      <Grid item xs={12}>\n        <Grid\n          sx={{ height: 300, pb: 2 }}\n          container\n          spacing={2}\n          alignItems={alignItems}\n          direction={direction}\n          justifyContent={justifyContent}\n        >\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: (theme) =>\n                    theme.palette.mode === \'dark\' ? \'#1A2027\' : \'#fff\',\n                  height: \'100%\',\n                  color: \'text.secondary\',\n                  pt: `${(value + 1) * 10}px`,\n                  pb: `${(value + 1) * 10}px`,\n                }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(event) => {\n                    setDirection(\n                      (event.target as HTMLInputElement).value as GridDirection,\n                    );\n                  }}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel\n                    value="row-reverse"\n                    control={<Radio />}\n                    label="row-reverse"\n                  />\n                  <FormControlLabel\n                    value="column"\n                    control={<Radio />}\n                    label="column"\n                  />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">justifyContent</FormLabel>\n                <RadioGroup\n                  row\n                  name="justifyContent"\n                  aria-label="justifyContent"\n                  value={justifyContent}\n                  onChange={(event) => {\n                    setJustifyContent(\n                      (event.target as HTMLInputElement).value as GridJustification,\n                    );\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel\n                    value="space-around"\n                    control={<Radio />}\n                    label="space-around"\n                  />\n                  <FormControlLabel\n                    value="space-evenly"\n                    control={<Radio />}\n                    label="space-evenly"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(event) => {\n                    setAlignItems(\n                      (event.target as HTMLInputElement).value as GridItemsAlignment,\n                    );\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="stretch"\n                    control={<Radio />}\n                    label="stretch"\n                  />\n                  <FormControlLabel\n                    value="baseline"\n                    control={<Radio />}\n                    label="baseline"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <HighlightedCode code={jsx} language="jsx" />\n      </Grid>\n    </Grid>\n  );\n}\n'},"AutoGrid.js":{module:"./AutoGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function AutoGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={3}>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>xs=6</Item>\n  </Grid>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n</Grid>",moduleTS:"./AutoGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function AutoGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"VariableWidthGrid.js":{module:"./VariableWidthGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function VariableWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"auto\">\n          <Item>variable width content</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:'<Grid container spacing={3}>\n  <Grid item xs="auto">\n    <Item>variable width content</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>xs=6</Item>\n  </Grid>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n</Grid>',moduleTS:"./VariableWidthGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function VariableWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"auto\">\n          <Item>variable width content</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"ComplexGrid.js":{module:"./ComplexGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nexport default function ComplexGrid() {\n  return (\n    <Paper\n      sx={{\n        p: 2,\n        margin: 'auto',\n        maxWidth: 500,\n        flexGrow: 1,\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item>\n          <ButtonBase sx={{ width: 128, height: 128 }}>\n            <Img alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Standard license\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Full resolution 1920x1080 \u2022 JPEG\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: 1030114\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography sx={{ cursor: 'pointer' }} variant=\"body2\">\n                Remove\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              $19.00\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n",moduleTS:"./ComplexGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nexport default function ComplexGrid() {\n  return (\n    <Paper\n      sx={{\n        p: 2,\n        margin: 'auto',\n        maxWidth: 500,\n        flexGrow: 1,\n        backgroundColor: (theme) =>\n          theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item>\n          <ButtonBase sx={{ width: 128, height: 128 }}>\n            <Img alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Standard license\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Full resolution 1920x1080 \u2022 JPEG\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: 1030114\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography sx={{ cursor: 'pointer' }} variant=\"body2\">\n                Remove\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              $19.00\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"},"NestedGrid.js":{module:"./NestedGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction FormRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={1}>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n</Grid>",moduleTS:"./NestedGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction FormRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"ColumnsGrid.js":{module:"./ColumnsGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ColumnsGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} columns={16}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2} columns={16}>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./ColumnsGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ColumnsGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} columns={16}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"AutoGridNoWrap.js":{module:"./AutoGridNoWrap.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  maxWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n}\n",moduleTS:"./AutoGridNoWrap.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  maxWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n}\n"},"CSSGrid.js":{module:"./CSSGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function CSSGrid() {\n  return (\n    <Box sx={{ width: 1 }}>\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(12, 1fr)\" gap={2}>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n",jsxPreview:'<Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>\n  <Box gridColumn="span 8">\n    <Item>xs=8</Item>\n  </Box>\n  <Box gridColumn="span 4">\n    <Item>xs=4</Item>\n  </Box>\n  <Box gridColumn="span 4">\n    <Item>xs=4</Item>\n  </Box>\n  <Box gridColumn="span 8">\n    <Item>xs=8</Item>\n  </Box>\n</Box>',moduleTS:"./CSSGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function CSSGrid() {\n  return (\n    <Box sx={{ width: 1 }}>\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(12, 1fr)\" gap={2}>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 4\">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn=\"span 8\">\n          <Item>xs=8</Item>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"}},Ce={"./BasicGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:t||(t=(0,m.jsxs)(p.ZP,{container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(u,{children:"xs=8"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(u,{children:"xs=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(u,{children:"xs=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(u,{children:"xs=8"})})]}))})},"./FullWidthGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:o||(o=(0,m.jsxs)(p.ZP,{container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,xs:6,md:8,children:(0,m.jsx)(h,{children:"xs=6 md=8"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,md:4,children:(0,m.jsx)(h,{children:"xs=6 md=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,md:4,children:(0,m.jsx)(h,{children:"xs=6 md=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,md:8,children:(0,m.jsx)(h,{children:"xs=6 md=8"})})]}))})},"./SpacingGrid.js":function(){var e=i.useState(2),n=(0,k.Z)(e,2),a=n[0],t=n[1],o="\n<Grid container spacing={".concat(a,"}>\n");return(0,m.jsxs)(p.ZP,{sx:{flexGrow:1},container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(p.ZP,{container:!0,justifyContent:"center",spacing:a,children:[0,1,2].map((function(e){return(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(d.Z,{sx:{height:140,width:100,backgroundColor:function(e){return"dark"===e.palette.mode?"#1A2027":"#fff"}}})},e)}))})}),(0,m.jsxs)(p.ZP,{item:!0,xs:12,children:[(0,m.jsx)(d.Z,{sx:{p:2},children:(0,m.jsx)(p.ZP,{container:!0,children:(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsxs)(w.Z,{component:"fieldset",children:[g||(g=(0,m.jsx)(G.Z,{component:"legend",children:"spacing"})),(0,m.jsx)(I.Z,{name:"spacing","aria-label":"spacing",value:a.toString(),onChange:function(e){t(Number(e.target.value))},row:!0,children:[0,.5,1,2,3,4,8,12].map((function(e){return(0,m.jsx)(C.Z,{value:e.toString(),control:x||(x=(0,m.jsx)(Z.Z,{})),label:e.toString()},e)}))})]})})})}),(0,m.jsx)(j.Z,{code:o,language:"jsx"})]})]})},"./RowAndColumnSpacing.js":function(){return(0,m.jsx)(c.Z,{sx:{width:"100%"},children:(0,m.jsxs)(p.ZP,{container:!0,rowSpacing:1,columnSpacing:{xs:1,sm:2,md:3},children:[f||(f=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(S,{children:"1"})})),y||(y=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(S,{children:"2"})})),b||(b=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(S,{children:"3"})})),v||(v=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(S,{children:"4"})}))]})})},"./ResponsiveGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:(0,m.jsx)(p.ZP,{container:!0,spacing:{xs:2,md:3},columns:{xs:4,sm:8,md:12},children:J()(Array(6)).map((function(e,n){return(0,m.jsx)(p.ZP,{item:!0,xs:2,sm:4,md:4,children:P||(P=(0,m.jsx)(U,{children:"xs=2"}))},n)}))})})},"./InteractiveGrid.js":function(){var e=i.useState("row"),n=(0,k.Z)(e,2),a=n[0],t=n[1],o=i.useState("center"),s=(0,k.Z)(o,2),r=s[0],l=s[1],c=i.useState("center"),u=(0,k.Z)(c,2),h=u[0],g=u[1],x='\n<Grid\n  container\n  direction="'.concat(a,'"\n  justifyContent="').concat(r,'"\n  alignItems="').concat(h,'"\n>\n');return(0,m.jsxs)(p.ZP,{sx:{flexGrow:1},container:!0,children:[(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(p.ZP,{sx:{height:300,pb:2},container:!0,spacing:2,alignItems:h,direction:a,justifyContent:r,children:[0,1,2].map((function(e){return(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(d.Z,{sx:{p:2,backgroundColor:function(e){return"dark"===e.palette.mode?"#1A2027":"#fff"},height:"100%",color:"text.secondary",pt:"".concat(10*(e+1),"px"),pb:"".concat(10*(e+1),"px")},children:"Cell ".concat(e+1)})},e)}))})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(d.Z,{sx:{p:2},children:(0,m.jsxs)(p.ZP,{container:!0,spacing:3,children:[(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsxs)(w.Z,{component:"fieldset",children:[R||(R=(0,m.jsx)(G.Z,{component:"legend",children:"direction"})),(0,m.jsxs)(I.Z,{row:!0,name:"direction","aria-label":"direction",value:a,onChange:function(e){t(e.target.value)},children:[A||(A=(0,m.jsx)(C.Z,{value:"row",control:(0,m.jsx)(Z.Z,{}),label:"row"})),T||(T=(0,m.jsx)(C.Z,{value:"row-reverse",control:(0,m.jsx)(Z.Z,{}),label:"row-reverse"})),B||(B=(0,m.jsx)(C.Z,{value:"column",control:(0,m.jsx)(Z.Z,{}),label:"column"})),F||(F=(0,m.jsx)(C.Z,{value:"column-reverse",control:(0,m.jsx)(Z.Z,{}),label:"column-reverse"}))]})]})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsxs)(w.Z,{component:"fieldset",children:[M||(M=(0,m.jsx)(G.Z,{component:"legend",children:"justifyContent"})),(0,m.jsxs)(I.Z,{row:!0,name:"justifyContent","aria-label":"justifyContent",value:r,onChange:function(e){l(e.target.value)},children:[L||(L=(0,m.jsx)(C.Z,{value:"flex-start",control:(0,m.jsx)(Z.Z,{}),label:"flex-start"})),W||(W=(0,m.jsx)(C.Z,{value:"center",control:(0,m.jsx)(Z.Z,{}),label:"center"})),z||(z=(0,m.jsx)(C.Z,{value:"flex-end",control:(0,m.jsx)(Z.Z,{}),label:"flex-end"})),D||(D=(0,m.jsx)(C.Z,{value:"space-between",control:(0,m.jsx)(Z.Z,{}),label:"space-between"})),H||(H=(0,m.jsx)(C.Z,{value:"space-around",control:(0,m.jsx)(Z.Z,{}),label:"space-around"})),N||(N=(0,m.jsx)(C.Z,{value:"space-evenly",control:(0,m.jsx)(Z.Z,{}),label:"space-evenly"}))]})]})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsxs)(w.Z,{component:"fieldset",children:[$||($=(0,m.jsx)(G.Z,{component:"legend",children:"alignItems"})),(0,m.jsxs)(I.Z,{row:!0,name:"alignItems","aria-label":"align items",value:h,onChange:function(e){g(e.target.value)},children:[q||(q=(0,m.jsx)(C.Z,{value:"flex-start",control:(0,m.jsx)(Z.Z,{}),label:"flex-start"})),_||(_=(0,m.jsx)(C.Z,{value:"center",control:(0,m.jsx)(Z.Z,{}),label:"center"})),O||(O=(0,m.jsx)(C.Z,{value:"flex-end",control:(0,m.jsx)(Z.Z,{}),label:"flex-end"})),E||(E=(0,m.jsx)(C.Z,{value:"stretch",control:(0,m.jsx)(Z.Z,{}),label:"stretch"})),V||(V=(0,m.jsx)(C.Z,{value:"baseline",control:(0,m.jsx)(Z.Z,{}),label:"baseline"}))]})]})})]})})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(j.Z,{code:x,language:"jsx"})})]})},"./AutoGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:K||(K=(0,m.jsxs)(p.ZP,{container:!0,spacing:3,children:[(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(Q,{children:"xs"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(Q,{children:"xs=6"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(Q,{children:"xs"})})]}))})},"./VariableWidthGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:X||(X=(0,m.jsxs)(p.ZP,{container:!0,spacing:3,children:[(0,m.jsx)(p.ZP,{item:!0,xs:"auto",children:(0,m.jsx)(ee,{children:"variable width content"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(ee,{children:"xs=6"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(ee,{children:"xs"})})]}))})},"./ComplexGrid.js":function(){return(0,m.jsx)(d.Z,{sx:{p:2,margin:"auto",maxWidth:500,flexGrow:1,backgroundColor:function(e){return"dark"===e.palette.mode?"#1A2027":"#fff"}},children:(0,m.jsxs)(p.ZP,{container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(re.Z,{sx:{width:128,height:128},children:ne||(ne=(0,m.jsx)(le,{alt:"complex",src:"/static/images/grid/complex.jpg"}))})}),(0,m.jsxs)(p.ZP,{item:!0,xs:12,sm:!0,container:!0,children:[(0,m.jsxs)(p.ZP,{item:!0,xs:!0,container:!0,direction:"column",spacing:2,children:[ae||(ae=(0,m.jsxs)(p.ZP,{item:!0,xs:!0,children:[(0,m.jsx)(se.Z,{gutterBottom:!0,variant:"subtitle1",component:"div",children:"Standard license"}),(0,m.jsx)(se.Z,{variant:"body2",gutterBottom:!0,children:"Full resolution 1920x1080 \u2022 JPEG"}),(0,m.jsx)(se.Z,{variant:"body2",color:"text.secondary",children:"ID: 1030114"})]})),(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(se.Z,{sx:{cursor:"pointer"},variant:"body2",children:"Remove"})})]}),te||(te=(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(se.Z,{variant:"subtitle1",component:"div",children:"$19.00"})}))]})]})})},"./NestedGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:ie||(ie=(0,m.jsxs)(p.ZP,{container:!0,spacing:1,children:[(0,m.jsx)(p.ZP,{container:!0,item:!0,spacing:3,children:(0,m.jsx)(pe,{})}),(0,m.jsx)(p.ZP,{container:!0,item:!0,spacing:3,children:(0,m.jsx)(pe,{})}),(0,m.jsx)(p.ZP,{container:!0,item:!0,spacing:3,children:(0,m.jsx)(pe,{})})]}))})},"./ColumnsGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:ce||(ce=(0,m.jsxs)(p.ZP,{container:!0,spacing:2,columns:16,children:[(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(me,{children:"xs=8"})}),(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(me,{children:"xs=8"})})]}))})},"./AutoGridNoWrap.js":function(){return(0,m.jsxs)(c.Z,{sx:{flexGrow:1,overflow:"hidden",px:3},children:[(0,m.jsx)(ye,{sx:{my:1,mx:"auto",p:2},children:ue||(ue=(0,m.jsxs)(p.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(fe.Z,{children:"W"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,zeroMinWidth:!0,children:(0,m.jsx)(se.Z,{noWrap:!0,children:be})})]}))}),(0,m.jsx)(ye,{sx:{my:1,mx:"auto",p:2},children:he||(he=(0,m.jsxs)(p.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(fe.Z,{children:"W"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(se.Z,{noWrap:!0,children:be})})]}))}),(0,m.jsx)(ye,{sx:{my:1,mx:"auto",p:2},children:ge||(ge=(0,m.jsxs)(p.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(fe.Z,{children:"W"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(se.Z,{children:be})})]}))})]})},"./CSSGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{width:1},children:xe||(xe=(0,m.jsxs)(c.Z,{display:"grid",gridTemplateColumns:"repeat(12, 1fr)",gap:2,children:[(0,m.jsx)(c.Z,{gridColumn:"span 8",children:(0,m.jsx)(ve,{children:"xs=8"})}),(0,m.jsx)(c.Z,{gridColumn:"span 4",children:(0,m.jsx)(ve,{children:"xs=4"})}),(0,m.jsx)(c.Z,{gridColumn:"span 4",children:(0,m.jsx)(ve,{children:"xs=4"})}),(0,m.jsx)(c.Z,{gridColumn:"span 8",children:(0,m.jsx)(ve,{children:"xs=8"})})]}))})}};function je(){return ke||(ke=(0,m.jsx)(s.Z,{demos:we,docs:Ge,demoComponents:Ce}))}},84408:function(e,n,a){"use strict";a.d(n,{Z:function(){return b}});var t=a(481936),o=a(25778),i=a(295649),s=a(827378),r=a(138944),l=a(501330),c=a(290763),d=a(906205),p=a(403503),m=a(824246),u=(0,p.Z)((0,m.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person"),h=a(288125),g=["alt","children","className","component","imgProps","sizes","src","srcSet","variant"],x=(0,c.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:function(e,n){var a=e.ownerState;return[n.root,n[a.variant],a.colorDefault&&n.colorDefault]}})((function(e){var n=e.theme,a=e.ownerState;return(0,i.Z)((0,i.Z)((0,i.Z)({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:n.typography.fontFamily,fontSize:n.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},"rounded"===a.variant&&{borderRadius:(n.vars||n).shape.borderRadius}),"square"===a.variant&&{borderRadius:0}),a.colorDefault&&(0,i.Z)({color:(n.vars||n).palette.background.default},n.vars?{backgroundColor:n.vars.palette.Avatar.defaultBg}:{backgroundColor:"light"===n.palette.mode?n.palette.grey[400]:n.palette.grey[600]}))})),f=(0,c.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:function(e,n){return n.img}})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),y=(0,c.ZP)(u,{name:"MuiAvatar",slot:"Fallback",overridesResolver:function(e,n){return n.fallback}})({width:"75%",height:"75%"});var b=s.forwardRef((function(e,n){var a=(0,d.Z)({props:e,name:"MuiAvatar"}),c=a.alt,p=a.children,u=a.className,b=a.component,v=void 0===b?"div":b,k=a.imgProps,G=a.sizes,w=a.src,C=a.srcSet,j=a.variant,I=void 0===j?"circular":j,Z=(0,t.Z)(a,g),S=null,P=function(e){var n=e.crossOrigin,a=e.referrerPolicy,t=e.src,i=e.srcSet,r=s.useState(!1),l=(0,o.Z)(r,2),c=l[0],d=l[1];return s.useEffect((function(){if(t||i){d(!1);var e=!0,o=new Image;return o.onload=function(){e&&d("loaded")},o.onerror=function(){e&&d("error")},o.crossOrigin=n,o.referrerPolicy=a,o.src=t,i&&(o.srcset=i),function(){e=!1}}}),[n,a,t,i]),c}((0,i.Z)((0,i.Z)({},k),{},{src:w,srcSet:C})),R=w||C,A=R&&"error"!==P,T=(0,i.Z)((0,i.Z)({},a),{},{colorDefault:!A,component:v,variant:I}),B=function(e){var n=e.classes,a={root:["root",e.variant,e.colorDefault&&"colorDefault"],img:["img"],fallback:["fallback"]};return(0,l.Z)(a,h.$,n)}(T);return S=A?(0,m.jsx)(f,(0,i.Z)({alt:c,src:w,srcSet:C,sizes:G,ownerState:T,className:B.img},k)):null!=p?p:R&&c?c[0]:(0,m.jsx)(y,{className:B.fallback}),(0,m.jsx)(x,(0,i.Z)((0,i.Z)({as:v,ownerState:T,className:(0,r.default)(B.root,u),ref:n},Z),{},{children:S}))}))},288125:function(e,n,a){"use strict";a.d(n,{$:function(){return o}});var t=a(618932);function o(e){return(0,t.Z)("MuiAvatar",e)}var i=(0,a(761424).Z)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);n.Z=i},584425:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/react-grid",function(){return a(139460)}])}},function(e){e.O(0,[75760,31194,91642,35408,85992,51588,79125,93899,63978,54328,82744,20365,51990,37637,26035,8726,11486,10552,67414,47093,84445,77756,94616,75236,49774,92888,40179],(function(){return n=584425,e(e.s=n);var n}));var n=e.O();_N_E=n}]);